from z3 import *

def average(l):
    return int(math.ceil(float(sum(l))/len(l)))

A = (0, 0, 0)
B = (2000, 0, 0)
C = (2000, 2000, 0)
D = (3000, 1500, 1700)

distances = open("tracking.in", "r").readlines()
coords = []
for distance in distances:
    tmp = map(float, distance.split(" "))
    x = Real("x")
    y = Real("y")
    z = Real("z")
    solve(
        x**2+y**2+z**2 == tmp[0]**2,
        (x-B[0])**2+y**2+z**2 == tmp[1]**2,
        (x-C[0])**2+(y-C[1])**2+z**2 == tmp[2]**2,
        (x-D[0])**2+(y-D[1])**2+(z-D[2])**2 == tmp[3]**2
    )

# Acquired from above:
coords = [ [784, 949, 205], [984, 502, 953], [404, 435, 101], [840, 652, 447], [98, 147, 665], [835, 352, 786], [377, 371, 768], [749, 867, 131], [708, 433, 553], [801, 425, 21], [813, 203, 556], [769, 571, 511], [31, 49, 9], [610, 839, 406], [322, 146, 547], [114, 95, 869], [477, 789, 207], [871, 497, 258], [655, 671, 798], [902, 624, 481], [821, 908, 499], [240, 450, 267], [362, 762, 413], [301, 324, 763], [700, 600, 778], [217, 937, 24], [778, 221, 206], [215, 915, 578], [425, 213, 340], [904, 786, 130], [816, 806, 988], [314, 596, 846], [884, 651, 128], [79, 387, 670], [295, 444, 629], [296, 708, 219], [255, 85, 790], [445, 647, 538], [871, 926, 9], [459, 664, 672], [696, 320, 313], [508, 235, 963], [304, 157, 631], [180, 745, 430], [628, 105, 816] ]

xs = [x[0] for x in coords]
ys = [x[1] for x in coords]
zs = [x[2] for x in coords]

print "sctf{%s, %s, %s}" % (average(xs), average(ys), average(zs))

# sctf{537, 516, 487}
